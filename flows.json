[
    {
        "id": "c36a334ab99f1f65",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0586ead44943440d",
        "type": "modbus-read",
        "z": "c36a334ab99f1f65",
        "name": "Input",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "9",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": true,
        "startDelayTime": "0",
        "server": "7c267376ed5e1585",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 310,
        "y": 40,
        "wires": [
            [
                "7209d9706da61440",
                "4a11c4c6ebe8a3bc"
            ],
            []
        ]
    },
    {
        "id": "7209d9706da61440",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "SystemState",
        "func": "const pddConfig = {\n    'SetPoint': msg.payload[1] / 100,\n    'ObjectValue': msg.payload[2] / 100,\n    'PDD2_out': msg.payload[3],\n    'Kp': msg.payload[4] / 100,\n    'Td': msg.payload[5] / 100,\n    'Ti': msg.payload[6] / 100,\n    'ValvePosition': msg.payload[7] / 100,\n};\n\nflow.set('valuesSaved', pddConfig);\n\nreturn { payload: flow.get('valuesSaved') };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "4a11c4c6ebe8a3bc",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "getConfig",
        "func": "const BITS = 16;\nconst config = msg.payload[0];\n\nconst binaryArray = config\n    .toString(2)\n    .split('')\n    .map(x=>Number(x));\n\nconst padding = BITS - binaryArray.length;\nfor(let i=0; i<padding; i++){\n    binaryArray.unshift(0);\n}\n\nglobal.set('config', binaryArray);\nreturn {...msg, payload: binaryArray};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "8ea84df491493302",
        "type": "ui_switch",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "Enable regulator",
        "tooltip": "",
        "group": "07738eac8cf5a48d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 620,
        "y": 280,
        "wires": [
            [
                "7474576e0487836e"
            ]
        ]
    },
    {
        "id": "098000efeb5c93ee",
        "type": "ui_switch",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "Manual mode",
        "tooltip": "",
        "group": "07738eac8cf5a48d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 620,
        "y": 320,
        "wires": [
            [
                "93d88ebb20d11c57"
            ]
        ]
    },
    {
        "id": "dd1aa3f70423e013",
        "type": "ui_slider",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "SetPoint",
        "tooltip": "",
        "group": "07738eac8cf5a48d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 640,
        "y": 440,
        "wires": [
            [
                "0e90e9fd93542d6d"
            ]
        ]
    },
    {
        "id": "be01fbeb48ece2e9",
        "type": "ui_text_input",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "Td",
        "tooltip": "",
        "group": "590a35ff3bb22c28",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 650,
        "y": 540,
        "wires": [
            [
                "42b6a96b135465c1"
            ]
        ]
    },
    {
        "id": "7d2968c7988a22de",
        "type": "ui_text_input",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "Ti",
        "tooltip": "",
        "group": "590a35ff3bb22c28",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 650,
        "y": 580,
        "wires": [
            [
                "d11c5e10ead24cc6"
            ]
        ]
    },
    {
        "id": "a72c1a51e959f41c",
        "type": "ui_switch",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "Open",
        "tooltip": "",
        "group": "82390b8f0b7ae641",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 650,
        "y": 360,
        "wires": [
            [
                "239413e248bee78e"
            ]
        ]
    },
    {
        "id": "e87955cb58480e9b",
        "type": "ui_switch",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "Close",
        "tooltip": "",
        "group": "82390b8f0b7ae641",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 650,
        "y": 400,
        "wires": [
            [
                "92acb23a272005f4"
            ]
        ]
    },
    {
        "id": "7474576e0487836e",
        "type": "rbe",
        "z": "c36a334ab99f1f65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 280,
        "wires": [
            [
                "02c529ecef2eee2e"
            ]
        ]
    },
    {
        "id": "93d88ebb20d11c57",
        "type": "rbe",
        "z": "c36a334ab99f1f65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 320,
        "wires": [
            [
                "ba806352868eca41"
            ]
        ]
    },
    {
        "id": "239413e248bee78e",
        "type": "rbe",
        "z": "c36a334ab99f1f65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 360,
        "wires": [
            [
                "1f8102c3199d4dab"
            ]
        ]
    },
    {
        "id": "92acb23a272005f4",
        "type": "rbe",
        "z": "c36a334ab99f1f65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 400,
        "wires": [
            [
                "df49147e978d218a"
            ]
        ]
    },
    {
        "id": "0e90e9fd93542d6d",
        "type": "rbe",
        "z": "c36a334ab99f1f65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 440,
        "wires": [
            [
                "01ea025bc86641b8"
            ]
        ]
    },
    {
        "id": "594cb98acc99e7b8",
        "type": "rbe",
        "z": "c36a334ab99f1f65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 500,
        "wires": [
            [
                "56249acb61fc8aa6"
            ]
        ]
    },
    {
        "id": "42b6a96b135465c1",
        "type": "rbe",
        "z": "c36a334ab99f1f65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 540,
        "wires": [
            [
                "ab6ffa0038c028b8"
            ]
        ]
    },
    {
        "id": "d11c5e10ead24cc6",
        "type": "rbe",
        "z": "c36a334ab99f1f65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 580,
        "wires": [
            [
                "d693a54b469fb47e"
            ]
        ]
    },
    {
        "id": "56249acb61fc8aa6",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "* 100",
        "func": "const value = msg.payload * 100;\nreturn { payload: value };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 500,
        "wires": [
            [
                "29842683ba954638"
            ]
        ]
    },
    {
        "id": "ab6ffa0038c028b8",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "* 100",
        "func": "const value = msg.payload * 100;\nreturn { payload: value };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 540,
        "wires": [
            [
                "46e292ea41bee0d1"
            ]
        ]
    },
    {
        "id": "d693a54b469fb47e",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "* 100",
        "func": "const value = msg.payload * 100;\nreturn { payload: value };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 580,
        "wires": [
            [
                "3b16d9d2302a5a8c"
            ]
        ]
    },
    {
        "id": "01ea025bc86641b8",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "* 100",
        "func": "const value = msg.payload * 100;\nreturn { payload: value };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 440,
        "wires": [
            [
                "f4a47c17d4aad61a"
            ]
        ]
    },
    {
        "id": "df49147e978d218a",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "close",
        "func": "const config = global.get('config');\n\nconst newConfig = config;\nnewConfig[12] = Number(!newConfig[12]);\nreturn { ...msg, payload: newConfig };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 400,
        "wires": [
            [
                "662cc76f073ef19d"
            ]
        ]
    },
    {
        "id": "1f8102c3199d4dab",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "open",
        "func": "const config = global.get('config');\n\nconst newConfig = config;\nnewConfig[13] = Number(!newConfig[13]);\nreturn { ...msg, payload: newConfig };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 360,
        "wires": [
            [
                "e06689b228081d18"
            ]
        ]
    },
    {
        "id": "ba806352868eca41",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "manualMode",
        "func": "const config = global.get('config');\n\nconst newConfig = config;\nnewConfig[14] = Number(!newConfig[14]);\nreturn {...msg, payload: newConfig};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "da59d80ee67aa3ed"
            ]
        ]
    },
    {
        "id": "02c529ecef2eee2e",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "enable",
        "func": "const config = global.get('config');\n\nconst newConfig = config;\nnewConfig[15] = Number(!newConfig[15]);\nreturn { ...msg, payload: newConfig };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 280,
        "wires": [
            [
                "9f4e27b7727c87f9"
            ]
        ]
    },
    {
        "id": "9f4e27b7727c87f9",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "toNumber",
        "func": "const binary = msg.payload.join('');\nconst decimal = parseInt(binary,2);\nreturn {...msg, payload: decimal};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 280,
        "wires": [
            [
                "592a9b1d630dc62d"
            ]
        ]
    },
    {
        "id": "da59d80ee67aa3ed",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "toNumber",
        "func": "const binary = msg.payload.join('');\nconst decimal = parseInt(binary, 2);\nreturn { ...msg, payload: decimal };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 320,
        "wires": [
            [
                "1baff258c1583eed"
            ]
        ]
    },
    {
        "id": "e06689b228081d18",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "toNumber",
        "func": "const binary = msg.payload.join('');\nconst decimal = parseInt(binary, 2);\nreturn { ...msg, payload: decimal };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 360,
        "wires": [
            [
                "6f2da4a5afb1cb43"
            ]
        ]
    },
    {
        "id": "662cc76f073ef19d",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "toNumber",
        "func": "const binary = msg.payload.join('');\nconst decimal = parseInt(binary, 2);\nreturn { ...msg, payload: decimal };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 400,
        "wires": [
            [
                "1cd32ea664db527a"
            ]
        ]
    },
    {
        "id": "592a9b1d630dc62d",
        "type": "modbus-write",
        "z": "c36a334ab99f1f65",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "1",
        "server": "7c267376ed5e1585",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1420,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1baff258c1583eed",
        "type": "modbus-write",
        "z": "c36a334ab99f1f65",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "1",
        "server": "7c267376ed5e1585",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1420,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6f2da4a5afb1cb43",
        "type": "modbus-write",
        "z": "c36a334ab99f1f65",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "1",
        "server": "7c267376ed5e1585",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1420,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1cd32ea664db527a",
        "type": "modbus-write",
        "z": "c36a334ab99f1f65",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "1",
        "server": "7c267376ed5e1585",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1420,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "29842683ba954638",
        "type": "modbus-write",
        "z": "c36a334ab99f1f65",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "4",
        "quantity": "1",
        "server": "7c267376ed5e1585",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1420,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "46e292ea41bee0d1",
        "type": "modbus-write",
        "z": "c36a334ab99f1f65",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "5",
        "quantity": "1",
        "server": "7c267376ed5e1585",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1420,
        "y": 540,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3b16d9d2302a5a8c",
        "type": "modbus-write",
        "z": "c36a334ab99f1f65",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "6",
        "quantity": "1",
        "server": "7c267376ed5e1585",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1420,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f4a47c17d4aad61a",
        "type": "modbus-write",
        "z": "c36a334ab99f1f65",
        "name": "",
        "showStatusActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "1",
        "quantity": "1",
        "server": "7c267376ed5e1585",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1420,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "594c9e0d69c4d14f",
        "type": "ui_chart",
        "z": "c36a334ab99f1f65",
        "name": "",
        "group": "07738eac8cf5a48d",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "realTimeChart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "EMPTY",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1420,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ae2ca07abdc62235",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectDefaultKp",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "valuesSaved.Kp",
        "payloadType": "flow",
        "x": 280,
        "y": 500,
        "wires": [
            [
                "d6630aead77b69a5"
            ]
        ]
    },
    {
        "id": "6454e3610b464b00",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectDefaultSetPoint",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "valuesSaved.SetPoint",
        "payloadType": "flow",
        "x": 260,
        "y": 440,
        "wires": [
            [
                "dd1aa3f70423e013"
            ]
        ]
    },
    {
        "id": "d6630aead77b69a5",
        "type": "ui_text_input",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "Kp",
        "tooltip": "",
        "group": "590a35ff3bb22c28",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 650,
        "y": 500,
        "wires": [
            [
                "594cb98acc99e7b8"
            ]
        ]
    },
    {
        "id": "a069822d23a9dc4f",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectDefaultOpenStatus",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "config[13]",
        "payloadType": "global",
        "x": 250,
        "y": 360,
        "wires": [
            [
                "c1eed3ccbc63dccd"
            ]
        ]
    },
    {
        "id": "bbe0b3b09eb9d107",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectDefaultTd",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "valuesSaved.Td",
        "payloadType": "flow",
        "x": 280,
        "y": 540,
        "wires": [
            [
                "be01fbeb48ece2e9"
            ]
        ]
    },
    {
        "id": "3d2735db8f379b4b",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectDefaultTi",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "valuesSaved.Ti",
        "payloadType": "flow",
        "x": 280,
        "y": 580,
        "wires": [
            [
                "7d2968c7988a22de"
            ]
        ]
    },
    {
        "id": "4cbf3a569f3e7691",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectDefaultMode",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "config[14]",
        "payloadType": "global",
        "x": 270,
        "y": 320,
        "wires": [
            [
                "a429cece08b18825"
            ]
        ]
    },
    {
        "id": "976573a84de88810",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectDefaultStatus",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "config[15]",
        "payloadType": "global",
        "x": 270,
        "y": 280,
        "wires": [
            [
                "6cfa870b33c4df81"
            ]
        ]
    },
    {
        "id": "6cfa870b33c4df81",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "convert",
        "func": "let val;\nif (msg.payload == 0)\n    val = false;\nelse\n    val = true;\nreturn { ...msg, payload: val };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "a429cece08b18825",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "convert",
        "func": "let val;\nif (msg.payload == 0)\n    val = false;\nelse\n    val = true;\nreturn { ...msg, payload: val };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "c1eed3ccbc63dccd",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "convert",
        "func": "let val;\nif (msg.payload == 0)\n    val = false;\nelse\n    val = true;\nreturn { ...msg, payload: val };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "52faeab56d0943a8",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "valuesSaved",
        "payloadType": "flow",
        "x": 270,
        "y": 700,
        "wires": [
            [
                "38c59a5ecd15206d"
            ]
        ]
    },
    {
        "id": "38c59a5ecd15206d",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "toDbFormat",
        "func": "msg.payload = {\n    bucket: 'object',\n    precision: 'ms',\n\n    data: [\n        {\n            measurement: 'obj',\n            tags: {\n            },\n            fields: {\n                setPoint: msg.payload.SetPoint,\n                objectValue: msg.payload.ObjectValue,\n                valvePosition: msg.payload.ValvePosition\n            },\n            timestamp: Date.now()\n        }\n    ]\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 700,
        "wires": [
            [
                "f168dad0125c2a5d"
            ]
        ]
    },
    {
        "id": "f168dad0125c2a5d",
        "type": "Stackhero-InfluxDB-v2-write",
        "z": "c36a334ab99f1f65",
        "server": "66059da9dfa79354",
        "name": "",
        "x": 970,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "3ec017ab25e389e5",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectValvePosition",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "ValvePosition",
        "payload": "valuesSaved.ValvePosition",
        "payloadType": "flow",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "594c9e0d69c4d14f"
            ]
        ]
    },
    {
        "id": "fcd53816e2f0fd4a",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectSetPoint",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "SetPoint",
        "payload": "valuesSaved.SetPoint",
        "payloadType": "flow",
        "x": 280,
        "y": 180,
        "wires": [
            [
                "594c9e0d69c4d14f"
            ]
        ]
    },
    {
        "id": "96f105bd0b3ed0fa",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectObjectValue",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "ObjectValue",
        "payload": "valuesSaved.ObjectValue",
        "payloadType": "flow",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "594c9e0d69c4d14f"
            ]
        ]
    },
    {
        "id": "237f19cbe0d39383",
        "type": "ui_dropdown",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "Оберіть діапазон:",
        "tooltip": "",
        "place": "Оберіть діапазон",
        "group": "2631814a3c84ed64",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1min",
                "value": 1,
                "type": "num"
            },
            {
                "label": "5min",
                "value": 5,
                "type": "num"
            },
            {
                "label": "15min",
                "value": 15,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 270,
        "y": 820,
        "wires": [
            [
                "cee24c90b3418e73"
            ]
        ]
    },
    {
        "id": "cee24c90b3418e73",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "filterByTime",
        "func": "msg.topic = [\n    'from(bucket: \"object\")',\n    `|> range(start: -${msg.payload}m)`,\n    '|> filter(fn: (r) => r[\"_field\"] == \"valvePosition\" or r[\"_field\"] == \"setPoint\" or r[\"_field\"] == \"objectValue\")',\n    '|> filter(fn: (r) => r[\"_measurement\"] == \"obj\")',\n    '|> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")'\n].join('\\n');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 840,
        "wires": [
            [
                "de02bc0fc4ce66da"
            ]
        ]
    },
    {
        "id": "de02bc0fc4ce66da",
        "type": "Stackhero-InfluxDB-v2-query",
        "z": "c36a334ab99f1f65",
        "server": "66059da9dfa79354",
        "name": "",
        "x": 970,
        "y": 860,
        "wires": [
            [
                "5179cb84ec585088"
            ]
        ]
    },
    {
        "id": "c65dcf03cc7b5a86",
        "type": "ui_chart",
        "z": "c36a334ab99f1f65",
        "name": "",
        "group": "2631814a3c84ed64",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "archiveChart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "EMPTY",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1430,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "5179cb84ec585088",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "toChartFormat",
        "func": "const valvePosition = [];\nconst setPoint = [];\nconst objectValue = [];\nconst payload = msg.payload[0];\n\npayload.forEach(element => {\n    valvePosition.push(\n        {\n            'x': new Date(element._time).getTime(),\n            'y': element.valvePosition\n        });\n    setPoint.push(\n        {\n            'x': new Date(element._time).getTime(),\n            'y': element.setPoint\n        });\n    objectValue.push(\n        {\n            'x': new Date(element._time).getTime(),\n            'y': element.objectValue\n        });\n});\n\nmsg.payload = [\n    {\n        'series': ['ValvePosition', 'SetPoint', 'ObjectValue'],\n        'data': [\n            valvePosition,\n            setPoint,\n            objectValue\n        ]\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 860,
        "wires": [
            [
                "c65dcf03cc7b5a86"
            ]
        ]
    },
    {
        "id": "5d0daf0a2c52751b",
        "type": "ui_date_picker",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "Оберіть початкову дату:",
        "group": "2631814a3c84ed64",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 250,
        "y": 900,
        "wires": [
            [
                "888991c41b3bd5d9"
            ]
        ]
    },
    {
        "id": "888991c41b3bd5d9",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "filterByCustomOptions",
        "func": "const subtract = Date.now() - msg.payload;\nmsg.topic = [\n    'from(bucket: \"object\")',\n    `|> range(start: -${subtract}s)`,\n    '|> filter(fn: (r) => r[\"_field\"] == \"valvePosition\" or r[\"_field\"] == \"setPoint\" or r[\"_field\"] == \"objectValue\")',\n    '|> filter(fn: (r) => r[\"_measurement\"] == \"obj\")',\n    '|> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")'\n].join('\\n');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 900,
        "wires": [
            [
                "de02bc0fc4ce66da"
            ]
        ]
    },
    {
        "id": "53b5e8165da7fdd4",
        "type": "ui_text_input",
        "z": "c36a334ab99f1f65",
        "name": "",
        "label": "За ... хвилин",
        "tooltip": "",
        "group": "2631814a3c84ed64",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "2000",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 290,
        "y": 860,
        "wires": [
            [
                "cee24c90b3418e73"
            ]
        ]
    },
    {
        "id": "f90ec6179ab36733",
        "type": "function",
        "z": "c36a334ab99f1f65",
        "name": "convert",
        "func": "let val;\nif (msg.payload == 0)\n    val = false;\nelse\n    val = true;\nreturn { ...msg, payload: val };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e93f3ccea1b4e3f8",
        "type": "inject",
        "z": "c36a334ab99f1f65",
        "name": "injectDefaultCloseStatus",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "config[12]",
        "payloadType": "global",
        "x": 250,
        "y": 400,
        "wires": [
            [
                "f90ec6179ab36733"
            ]
        ]
    },
    {
        "id": "7c267376ed5e1585",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "07738eac8cf5a48d",
        "type": "ui_group",
        "name": "Controller",
        "tab": "8ebab36afdd5d615",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "590a35ff3bb22c28",
        "type": "ui_group",
        "name": "Regulator",
        "tab": "8ebab36afdd5d615",
        "order": 3,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "82390b8f0b7ae641",
        "type": "ui_group",
        "name": "Manual",
        "tab": "8ebab36afdd5d615",
        "order": 2,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "66059da9dfa79354",
        "type": "Stackhero-InfluxDB-v2-Server",
        "name": "object",
        "host": "localhost",
        "port": "8086",
        "tls": false
    },
    {
        "id": "2631814a3c84ed64",
        "type": "ui_group",
        "name": "Архівні дані",
        "tab": "8ebab36afdd5d615",
        "order": 4,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8ebab36afdd5d615",
        "type": "ui_tab",
        "name": "Config",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]